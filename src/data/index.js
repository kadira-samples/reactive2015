export default data = {
  "schedule": [
    {
      "title": "Tuesday (Conference Day)",
      "date": "November 3, 2015",
      "slots": [
        { "talk" : false,
          "time" : "8:00–9:00",
          "title" : "Registration"
        },
        { "talk" : false,
          "time" : "9:00–9:15",
          "title" : "Conference opening"
        },
        { "company" : "Mozilla",
          "speaker" : "James Long",
          "photo" : "https://reactive2015.com/assets/img/team/james_long.jpg",
          "summary" : "This is Photoshop's version of Lorem Ipsum. Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum, nec sagittis sem nibh id elit. The Standardistas are lecturers in interactive design. Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum, nec sagittis sem nibh id elit. The Standardistas are lecturers in interactive design.",
          "talk" : true,
          "time" : "9:15–9:45",
          "title" : "TBD"
        },
        { "category" : "Rethinking Rest",
          "company" : "Netflix",
          "speaker" : "Paul Taylor",
          "photo" : "https://reactive2015.com/assets/img/team/paul_taylor.jpg",
          "summary" : "Imagine how easy building your web application would be if all of your data was available in-memory on the client. Falcor lets you to code that way.Falcor is the open-source, JS data access framework that powers Netflix. Falcor lets you represent all of your cloud data sources as one virtual JSON model on the server. On the client, Falcor makes it appear as if the entire JSON model is available locally and allows you to access data the same way you would from an in-memory JSON object. Falcor retrieves the model data you request from the cloud on-demand, transparently handling all the network communication and keeping the server and client in sync.Falcor is not a replacement for your MVC framework, your database, or your application server. Falcor fits seamlessly into your existing stack and lets the layers communicate more efficiently.Get an inside look at the innovative data platform that powers the Netflix UIs and the new UI design patterns it enables. Learn more how Falcor powers Netflix, and how you can integrate into your existing stack.",
          "talk" : true,
          "time" : "9:45–10:45",
          "title" : "Bind to the Cloud with Falcor"
        },
        { "talk" : false,
          "time" : "10:45–11:15",
          "title" : "Coffee Break"
        },
        { "category" : "Data Flow",
          "company" : "VacuumLabs",
          "speaker" : "Daniel Steigerwald",
          "photo" : "https://reactive2015.com/assets/img/team/daniel_steigerwald.jpg",
          "summary" : "As programs get bigger, they also become more complex and harder to understand. We all think ourselves pretty clever, of course, but we are mere human beings, and even a moderate amount of chaos tends to baffle us. And then it all goes downhill. Working on something you do not really understand is a bit like cutting random wires on those time-activated bombs they always have in movies. If you are lucky, you might get the right one ― especially if you are the hero of the movie and strike a suitably dramatic pose ― but there is always the possibility of blowing everything up.",
          "talk" : true,
          "time" : "11:15–11:45",
          "title" : "Functional Programming in JavaScript. What, why, and how."
        },
        { "category" : "React General",
          "company" : "Datascript",
          "speaker" : "Nikita Prokopov",
          "photo" : "https://reactive2015.com/assets/img/team/nikita_prokopov.jpg",
          "summary" : "React is a framework and consist of many parts. I want to study these parts in isolation, identify their purpose, how they affect the way we write apps, and how else can we achieve same effect (alternative solutions). Parts are: VDOM, local state, components, elements, classes, id allocation, lifecycle callbacks, mixins, lazy dom and so on.",
          "talk" : true,
          "time" : "11:45–12:30",
          "title" : "Deconstructing React"
        },
        { "category" : "React General",
          "company" : "SEEK",
          "speaker" : "Mark Dalgleish",
          "photo" : "https://reactive2015.com/assets/img/team/mark_dalgleish.jpg",
          "summary" : "With the push towards writing CSS in JavaScript within the React community, CSS Modules have suddenly emerged as a surprisingly popular alternative that still allow us to maintain our connection with the CSS community. Do we have to give up writing CSS in JavaScript? Are we clinging to the past, or do CSS Modules offer a new way forward for the entire web community? In this talk we'll examine both the history and potential future of CSS Modules, and hopefully inspire the next generation of styling in React.",
          "talk" : true,
          "time" : "12:30–13:15",
          "title" : "The Case for CSS Modules"
        },
        { "talk" : false,
          "time" : "13:15–14:15",
          "title" : "Lunch Break"
        },
        { "category" : "Data Flow",
          "speaker" : "Christian Alfoni",
          "photo" : "https://reactive2015.com/assets/img/team/christian_alfoni.jpg",
          "summary" : "The one way flow of flux has pushed us in the right direction, but we are still evolving what makes up that flow. Cerebral is a project that separates storing state and producing state with a functional flow defining API called signals.",
          "talk" : true,
          "time" : "14:15–14:45",
          "title" : "State, UI and the stuff in between"
        },
        { "category" : "Data Flow",
          "speaker" : "Julia Gao",
          "photo" : "https://reactive2015.com/assets/img/team/julia_gao.jpg",
          "summary" : "Functional programming gives developers better ideas on how the application will react, more expected outputs, and less time needed for debugging. Immutability is one of the key points for functional programming, I'll show you some of the things we can improve on the front-end to make the code more immutable and functional.",
          "talk" : true,
          "time" : "14:45–15:15",
          "title" : "Front‐end Can Be More Functional"
        },
        { "category" : "Rethinking Rest",
          "company" : "Swarm.js",
          "speaker" : "Victor Grishchenko ",
          "photo" : "https://reactive2015.com/assets/img/team/victor_grishchenko.jpg",
          "summary" : "This is Photoshop's version of Lorem Ipsum. Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum, nec sagittis sem nibh id elit. The Standardistas are lecturers in interactive design. Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum, nec sagittis sem nibh id elit. The Standardistas are lecturers in interactive design.",
          "talk" : true,
          "time" : "15:15–15:45",
          "title" : "TBD"
        },
        { "category" : "Data Flow",
          "company" : "Netflix",
          "speaker" : "Paul Taylor",
          "photo" : "https://reactive2015.com/assets/img/team/paul_taylor.jpg",
          "summary" : " Reactive Extensions for JavaScript is evolving! Building on lessons learned from RxJava and RxMobile, Microsoft Netflix, Google, and the ReactiveX community have begun work on the next version of RxJS. This talk will enumerate the improvements we’ve made to increase speed, reduce memory, expose locations for extension, provide more debuggable call-stacks, and enable more readable flame charts.",
          "talk" : true,
          "time" : "15:45–16:15",
          "title" : "RxJS Evolved"
        },
        { "talk" : false,
          "time" : "16:15–16:45",
          "title" : "Coffee Break"
        },
        { "category" : "Data Flow",
          "company" : "Yahoo",
          "speaker" : "Rajiv Tirumalareddy",
          "photo" : "https://reactive2015.com/assets/img/team/rajiv_tirumalareddy.jpg",
          "summary" : "React is great and Flux is awesome. Running both on the server and client is even better! You've built your app with the latest and greatest tech stack, but will your app scale to millions of users? We created and open sourced Fluxible and other libraries that support Yahoo's high-traffic web applications. I'll share our learnings and go through best practices, performance concerns, and challenges of building robust and scalable web applications.",
          "talk" : true,
          "time" : "16:45–17:15",
          "title" : "Universal React + Flux at scale"
        },
        { "category" : "Rethinking Rest",
          "company" : "VacuumLabs",
          "speaker" : "Tomas Kulich",
          "photo" : "https://reactive2015.com/assets/img/team/tomas_kulich.jpg",
          "summary" : "This is Photoshop's version of Lorem Ipsum. Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum, nec sagittis sem nibh id elit. The Standardistas are lecturers in interactive design. Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum, nec sagittis sem nibh id elit. The Standardistas are lecturers in interactive design.",
          "talk" : true,
          "time" : "17:15–18:00",
          "title" : "TBD"
        },
        { "talk" : false,
          "time" : "18:00–19:00",
          "title" : "Lightning Talks"
        },
        { "talk" : false,
          "time" : "19:00",
          "title" : "Door Closing"
        }
      ]
    },
    {
      "title": "Wednesday (Conference Day)",
      "date": "November 4, 2015",
      "slots": [
        { "talk" : false,
          "time" : "8:30–9:00",
          "title" : "Doors Open"
        },
        { "category" : "Data Flow",
          "company" : "Mendix",
          "speaker" : "Michel Weststrate",
          "photo" : "https://reactive2015.com/assets/img/team/michel_weststrate.jpg",
          "summary" : "The ability to express essential complexity in a simple way is crucial for any code-base. At Mendix we did an interesting discovery during the development of a complex MDD tool. React, mutable data structures and transparent reactive programming are a match made in heaven. We published a library that leverages these concepts; Mobservable. It helps you to write simple, declarative, yet highly efficient code. Your future code maintainers will love you for applying it.",
          "talk" : true,
          "time" : "9:00–9:30",
          "title" : "React, transparent reactive programming and mutable data structures"
        },
        { "category" : "React Everywhere",
          "company" : "Man+Moon",
          "speaker" : "Mike Grabowski",
          "photo" : "https://reactive2015.com/assets/img/team/mike_grabowski.jpg",
          "summary" : "Have you ever written a web app in React and been wondering what would happened to your code, if you just dropped it onto another target? If the answer is yes — that’s great. We got you covered.\"Learn once, write everywhere\" is the core principle behind React Native that we are going to explore in this talk. By discussing different patterns you’ll get an in-depth understanding of how to start bringing fully native experience to your users in no time. We are also going to compare the differences between the web and native platforms and how to adapt your existing react.js code, including polyfilling missing web browsers and using ES2015+ with Webpack.",
          "talk" : true,
          "time" : "9:30–10:00",
          "title" : "TBD"
        },
        { "category" : "React General",
          "company" : "LearnBoost, Automattic",
          "speaker" : "Guillermo Rauch",
          "photo" : "https://reactive2015.com/assets/img/team/guillermo_rauch.jpg",
          "summary" : "This is Photoshop's version of Lorem Ipsum. Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum, nec sagittis sem nibh id elit. The Standardistas are lecturers in interactive design. Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum, nec sagittis sem nibh id elit. The Standardistas are lecturers in interactive design.",
          "talk" : true,
          "time" : "10:00–10:45",
          "title" : "TBD"
        },
        { "talk" : false,
          "time" : "10:45–11:15",
          "title" : "Coffee Break"
        },
        { "category" : "React Everywhere",
          "company" : "Twitter",
          "speaker" : "Andreas Savvides",
          "photo" : "https://reactive2015.com/assets/img/team/andreas_savvides.jpg",
          "summary" : " d3 has been the de facto standard when it comes to data visualisations for a while now and React has recently emerged as the go-to library for building user interfaces. d3 and React are both data-centric libraries, making them a natural fit; d3 takes a data-driven approach and React aims to solve the problem of data changing over time in the context of building large applications. There have been various approaches documented on how to effectively use d3 and React together. In this talk, I will be going through a number of these approaches, talking about what I have learned from them and how I go about creating reusable chart components for large scale applications.",
          "talk" : true,
          "time" : "11:15–11:45",
          "title" : "d3 with React"
        },
        { "category" : "React Everywhere",
          "company" : "independent",
          "speaker" : "Joshua Sierles",
          "photo" : "https://reactive2015.com/assets/img/team/joshua_sierles.jpg",
          "summary" : " If you’re like me, coming from web development, you find traditional mobile development slow and difficult to learn hands-on without a lot of guesswork, headaches and patience. Above all, things just move slower. The React Native Playground breaks down barriers to mobile development by making it speedy and trivial to write and test React Native code across platforms and devices. I want to share my experience working with an amazing team on this free resource. First, I'll give a quick tour of what's possible with the Playground, showing off some of React Native itself. We’ll see how React Native’s unique architecture made this project possible, revealing some interesting details of its inner workings. For example, how we're serving React Native javascript code over the web, and how we can load an application from inside another one. Finally, I want to briefly discuss how working on project like this, which help developers learn faster, can be fun, rewarding and an antidote to programmer fatigue.",
          "talk" : true,
          "time" : "11:45–12:15",
          "title" : "Work and Play in the React Native Playground"
        },
        { "category" : "Data Flow",
          "company" : "NoRedInk",
          "speaker" : "Richard Feldman",
          "photo" : "https://reactive2015.com/assets/img/team/richard_feldman.jpg",
          "summary" : "Imagine a world without side effects, where the only way to make things happen was to call functions whose return values described what you wanted done. What gets easier in that world? What gets harder? What would that mean for debugging? Testing?We don't have to wonder about these things, because this world already exists — and it compiles to JavaScript. It's the world of Elm, where there are no side effects, all functions are stateless, and all data is immutable. Elm embraces the concepts that make reactive programming great, and goes one step further to shed the error‐prone mutations and side effects that so often lead to incidental complexity and buggy code.NoRedInk has reaped the benefits of this approach since they began using Elm in production earlier in 2015. It's helped them scale and maintain a complex front-end code base that students use to answer millions of questions per day. Come see how refreshing this world can be!",
          "talk" : true,
          "time" : "12:15–13:15",
          "title" : "Effects as Data"
        },
        { "talk" : false,
          "time" : "13:15–14:15",
          "title" : "Lunch Break"
        },
        { "category" : "Data Flow",
          "company" : "Fadio IT",
          "speaker" : "François de Campredon",
          "photo" : "https://reactive2015.com/assets/img/team/francois_de_campredon.jpg",
          "summary" : "In the past two years, React and all the related projects completely changed our way of creating application by breaking all the rules and forcing us to redefine what we thought being \"best practice\".However, there is still an area that has not changed much : how we define the relationship between user input and application state.In this talk, I'll try to demonstrate that we can express this relationship in a simpler and more declarative way by using techniques from reactive programing and by combining React with RxJS.",
          "talk" : true,
          "time" : "14:15–14:45",
          "title" : "Going Reactive with React."
        },
        { "category" : "React General",
          "company" : "VacuumLabs",
          "speaker" : "Marcela Hrda",
          "photo" : "https://reactive2015.com/assets/img/team/marcelka_hrda.jpg",
          "summary" : " Creating validated forms is usually a troublesome experience. Most libraries used for building forms are complex and difficult to customize. As React plays nicely with functional approach, it can be easily used to create library for creating forms that is: a) simple and easy to understand b) customizable and extensible c) providing top user experience. I will present such library for building validated forms.",
          "talk" : true,
          "time" : "14:45–15:15",
          "title" : "Form validation made simple with React"
        },
        { "category" : "React Everywhere",
          "company" : "Independent",
          "speaker" : "Brent Vatne",
          "photo" : "https://reactive2015.com/assets/img/team/brent_vatne.jpg",
          "summary" : "Engineers with experience using React for web coming who dive into mobile will feel at home quickly because the basic React API doesn't change. But building for mobile introduces a different way of thinking about the software that you create and React Native empowers you to embrace this rather than attempt to hide it from you: your primary mode of interaction is touch, animations are more common and are expected to be smooth and dynamically track your gestures, you actually have to think about how your app will handle offline / poor connectivity, what happens when the user backgrounds it and comes back, how to send push/local notifications and respond to them, how to stay at 60fps performance on a much less capable device with more demanding users, responding to the keyboard appearing and hiding - specifying different keyboard types, autocorrect/autocomplete, dealing with device orientation changes and status bar changes, app store deployment delays and more. I won't go into great detail about each of these points but will rather help you to build a mental map of the space and touch on solutions that React Native provides to handle these mobile-specific problems, in order for unknown unknowns can become known unknowns. So this talk is kind of to React Native what a maphack is to Starcraft, but totally not lame like that.",
          "talk" : true,
          "time" : "15:15–15:45",
          "title" : "From React web to native mobile: mapping out the unknown unknowns"
        },
        { "category" : "React Everywhere",
          "company" : "",
          "speaker" : "Speaker announced soon",
          "summary" : "This is Photoshop's version of Lorem Ipsum. Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum, nec sagittis sem nibh id elit. The Standardistas are lecturers in interactive design. Proin gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor, nisi elit consequat ipsum, nec sagittis sem nibh id elit. The Standardistas are lecturers in interactive design.",
          "talk" : true,
          "time" : "15:45–16:15",
          "title" : "TBD"
        },
        { "talk" : false,
          "time" : "16:15–16:45",
          "title" : "Coffee Break"
        },
        { "category" : "Rethinking Rest",
          "company" : "Bushido",
          "speaker" : "Sean Grove",
          "photo" : "https://reactive2015.com/assets/img/team/sean_grove.jpg",
          "summary" : "Dato is a new way of building applications, heavily inspired by Meteor/Firebase/Relay, but informed by functional, data-oriented programming techniques.The goal is to provide:Seamless, permission-aware data synching between the sever and n-clientsSeamless, permission-aware rpc invocationsA more flexible, intuitive UI layerAdvanced tooling layer for time-traveling debuggers, state serialization, component layout, query editing, performance optimizations, and others.Integration on the backend to stream into analytics, session replay, 3rd-party integration",
          "talk" : true,
          "time" : "16:45–17:15",
          "title" : "Dato — a functional way to build reactive applications"
        },
        { "category" : "Data Flow",
          "company" : "Futurice",
          "speaker" : "Andre Staltz",
          "photo" : "https://reactive2015.com/assets/img/team/andre_staltz.jpg",
          "summary" : "React's future is going to be more functional, and less OOP. What if that future is already reality? How would it look like? React's foundations are reactive rendering and UI as a pure function of state. These two foundations are reactive programming and functional programming, yet React has a lot of concepts from imperative programming. In this talk we will discover how Cycle.js is purely reactive and functional, and why it's an interesting alternative to React.",
          "talk" : true,
          "time" : "17:15–18:00",
          "title" : "Cycle.js and functional reactive user interfaces"
        },
        { "talk" : false,
          "time" : "18:30–19:00",
          "title" : "Closing ceremony"
        },
        { "talk" : false,
          "time" : "19:00",
          "title" : "Door Closing"
        }
      ]
    }
  ],
  "speakers": [
    { "bio" : "Andre is a user interface engineer at Futurice, with extensive knowledge in reactive programming.",
      "country" : "Finland",
      "name" : "ANDRE STALTZ",
      "photo" : "https://reactive2015.com/assets/img/team/andre_staltz.jpg"
    },
    { "bio" : "Front-end developer from Utah, using ReactJS and ImmutableJS . Loves functional programming, currently learning Racket and Haskell .",
      "country" : "Utah, USA",
      "name" : "JULIA GAO",
      "photo" : "https://reactive2015.com/assets/img/team/julia_gao.jpg"
    },
    { "bio" : "For the past ten years Nikita Prokopov has been building web interfaces, backends and distributed systems in Clojure, Erlang, Python, Java.",
      "country" : "Russia",
      "name" : "NIKITA PROKOPOV",
      "photo" : "https://reactive2015.com/assets/img/team/nikita_prokopov.jpg"
    },
    { "bio" : "Researching deep hypertext, distributed systems and the general information metabolism of the society. Founder @swarm_js.",
      "country" : "Russia",
      "name" : "VICTOR GRISHCHENKO",
      "photo" : "https://reactive2015.com/assets/img/team/victor_grishchenko.jpg"
    },
    { "bio" : "Rajiv is software engineer at Yahoo working on node.js and Fluxible (Universal Flux and React) frontends that power high-traffic web applications.",
      "country" : "San Francisco, CA",
      "name" : "RAJIV TIRUMALAREDDY",
      "photo" : "https://reactive2015.com/assets/img/team/rajiv_tirumalareddy.jpg"
    },
    { "bio" : "Mike is a Full-Stack Developer at Man+Moon bringing real-time experience to thousands of people with a help of Javascript.",
      "country" : "Poland",
      "name" : "MIKE GRABOWSKI",
      "photo" : "https://reactive2015.com/assets/img/team/mike_grabowski.jpg"
    },
    { "bio" : "Mark Dalgleish is the co-creator of CSS Modules, lead organiser of MelbJS and progressive enhancement enthusiast.",
      "country" : "Australia",
      "name" : "MARK DALGLEISH",
      "photo" : "https://reactive2015.com/assets/img/team/mark_dalgleish.jpg"
    },
    { "bio" : "Sean's been convinced there are better ways to develop applications across the stack for years, and built time-travelling debuggers, interface builders, layout tools, and graphic design tools in his quest to explore the space.",
      "country" : "California, USA",
      "name" : "SEAN GROVE",
      "photo" : "https://reactive2015.com/assets/img/team/sean_grove.jpg"
    },
    { "bio" : "Marcelka is a Quantum Physicist turned React developer. Studied at Caltech. One of the founders of VacuumLabs",
      "country" : "Bratislava, Slovakia",
      "name" : "MARCELKA HRDÁ",
      "photo" : "https://reactive2015.com/assets/img/team/marcelka_hrda.jpg"
    },
    { "bio" : "Christian Alfoni likes to share ideas and build tools to make web development more fun than painful.",
      "country" : "Norway",
      "name" : "CHRISTIAN ALFONI",
      "photo" : "https://reactive2015.com/assets/img/team/christian_alfoni.jpg"
    },
    { "bio" : "Full-stack developer and co-founder of Fadio IT, JavaScript lover, creator of rx-react.",
      "country" : "France",
      "name" : "FRANÇOIS DE CAMPREDON",
      "photo" : "https://reactive2015.com/assets/img/team/francois_de_campredon.jpg"
    },
    { "bio" : "Guillermo Rauch is the former CTO and co-founder of LearnBoost and Cloudup, acquired by WordPress.com in 2013.",
      "country" : "California, USA",
      "name" : "GUILLERMO RAUCH",
      "photo" : "https://reactive2015.com/assets/img/team/guillermo_rauch.jpg"
    },
    { "bio" : "Michel is a full-stack lead developer at Mendix. A company that drives digital innovation in large enterprises in partnership with companies like HP, Capgemini and Pivotal.",
      "country" : "Netherlands",
      "name" : "MICHEL WESTSTRATE",
      "photo" : "https://reactive2015.com/assets/img/team/michel_weststrate.jpg"
    },
    { "bio" : "Creator of Este, dev stack and starter kit for React/Flux universal web applications. Angel developer, Google Developer Expert, libertarian.",
      "country" : "Czech Republic",
      "name" : "DANIEL STEIGERWALD",
      "photo" : "https://reactive2015.com/assets/img/team/daniel_steigerwald.jpg"
    },
    { "bio" : "Richard is the creator of seamless-immutable and Dreamwriter, and coauthor of Developing a React Edge. Richard leads the front-end team at NoRedInk, where he introduced React, then Flux, and now Elm to their production stack.",
      "country" : "San Francisco, CA",
      "name" : "RICHARD FELDMAN",
      "photo" : "https://reactive2015.com/assets/img/team/richard_feldman.jpg"
    },
    { "bio" : "Joshua is React Native Playground and Rails/DevOps guy. Plays flamenco guitar in Sevilla, Spain, while working on a React Native development platform.",
      "country" : "Sevilla, Spain",
      "name" : "JOSHUA SIERLES",
      "photo" : "https://reactive2015.com/assets/img/team/joshua_sierles.jpg"
    },
    { "bio" : "Paul is a consultant in San Francisco, CA, and former lead engineer on FalcorJS on Netflix’sUI Platform team.",
      "country" : "San Francisco, CA",
      "name" : "PAUL TAYLOR",
      "photo" : "https://reactive2015.com/assets/img/team/paul_taylor.jpg"
    },
    { "bio" : "Tomas is a former university assistant professor at the Faculty of Informatics, Comenius University, Bratislava. \nHe found his passion as the founder\nand CTO of VacuumLabs.",
      "country" : "Bratislava, Slovakia",
      "name" : "TOMÁŠ KULICH",
      "photo" : "https://reactive2015.com/assets/img/team/tomas_kulich.jpg"
    },
    { "bio" : "Andreas is a full-stack, product-driven Software Engineer who enjoys building interactive single page applications with rich data visualisations.",
      "country" : "United Kingdom",
      "name" : "ANDREAS SAVVIDES",
      "photo" : "https://reactive2015.com/assets/img/team/andreas_savvides.jpg"
    },
    { "bio" : "Lives in Vancouver and work primarily with Exponent and Iodine on React Native projects. With the rest of my time, I am a core contributor to React Native itself, I send out the React Native Newsletter each week and I try to go for long runs whenever I can.",
      "country" : "Vancouver, Canada",
      "name" : "BRENT VATNE",
      "photo" : "https://reactive2015.com/assets/img/team/brent_vatne.jpg"
    },
    { "bio" : "Works for Mozilla on the Firefox Developer Tools, mostly trying to make debugging JavaScript better. He's spent the last 8 years studying programming languages like Lisp and Scheme, and trying to bring various ideas to JavaScript. He likes to write in-depth articles about interesting programming ideas. Most of his free time is now happily dedicated to his daughter",
      "country" : "Virginia, USA",
      "name" : "JAMES LONG",
      "photo" : "https://reactive2015.com/assets/img/team/james_long.jpg"
    },
    { "bio" : "Works on React Native, specifically the Android part, at Facebook London. I am very excited to see what we'll build together now that React Native is open source on iOS and Android.",
      "country" : "London",
      "name" : "MARTIN KONICEK",
      "photo" : "https://reactive2015.com/assets/img/team/martin_konicek.jpg"
    },
    { "bio" : "Founder of Seattle based startup pol.is, Senior Front End Developer at Formidable Labs. He has architected and built client side applications for some of the largest brands in the world. Teaches in a series of in depth talks on ReactJS given at Facebook Seattle. Colin's primary focus is UI design, product design and information architecture.",
      "country" : "Seattle,USA",
      "name" : "COLIN MEGILL",
      "photo" : "https://reactive2015.com/assets/img/team/colin_megill.jpg"
    }
  ]
}